// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios17.2 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name NetworkCustomSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
@_exported import NetworkCustomSDK
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public let Network: NetworkCustomSDK.NetworkCustomSDK
@_hasMissingDesignatedInitializers public class NetworkCustomSDK {
  public static let `default`: NetworkCustomSDK.NetworkCustomSDK
  @objc deinit
}
extension NetworkCustomSDK.NetworkCustomSDK {
  public func request(endpoint: NetworkCustomSDK.NetworkEndpoint, completion: @escaping (Swift.Result<Foundation.Data, any Swift.Error>) -> Swift.Void)
}
public enum NetworkEndpoint {
  case custom(url: Foundation.URL, method: Swift.String, headers: [Swift.String : Swift.String]?, queryItems: [Swift.String : Any]?, body: Foundation.Data?)
}
public struct Activity : Swift.Codable {
  public let activity: Swift.String
  public let type: Swift.String
  public let participants: Swift.Int
  public let price: Swift.Double
  public let link: Swift.String
  public let key: Swift.String
  public let accessibility: Swift.Double
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public enum NetworkFrameworkError : Swift.Error {
  case invalidURL
  case requestError(_: any Swift.Error)
  case decodingError(_: Swift.DecodingError.Context)
  public var localizedDescription: Swift.String {
    get
  }
}
